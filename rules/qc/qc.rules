# -*- mode: Snakemake -*-
#
# Illumina quality control rules

import subprocess
from collections import OrderedDict
import pandas
from sunbeamlib import reports


rule all_qc:
    """Runs trimmomatic and fastqc on all input files."""
    input:
        TARGET_QC


ruleorder: trimmomatic_paired > trimmomatic_unpaired


rule trimmomatic_unpaired:
    input:
        lambda wildcards: Samples[wildcards.sample]['1']
    output:
        str(QC_FP/'02_trimmomatic'/'{sample}_1.fastq.gz')
    log: str(QC_FP/'log'/'trimmomatic'/'{sample}.out')
    params:
        sw_start = Cfg['qc']['slidingwindow'][0],
        sw_end = Cfg['qc']['slidingwindow'][1]
    threads:
        Cfg['qc']['threads']
    conda:
        "../../envs/qc.yml"
    shell:
        """
        trimmomatic \
        SE -threads {threads} -phred33 \
        {input} {output} \
        ILLUMINACLIP:{Cfg[qc][adapter_fp]}:2:30:10:8:true \
        LEADING:{Cfg[qc][leading]} \
        TRAILING:{Cfg[qc][trailing]} \
        SLIDINGWINDOW:{params.sw_start}:{params.sw_end} \
        MINLEN:{Cfg[qc][minlen]} \
        > >(tee -a {log}) 2> >(tee -a {log} >&2)
        """


rule trimmomatic_paired:
    input:
        r1 = lambda wildcards: Samples[wildcards.sample]['1'],
        r2 = lambda wildcards: Samples[wildcards.sample]['2']
    output:
        pair_r1 = str(QC_FP/'02_trimmomatic'/'{sample}_1.fastq.gz'),
        pair_r2 = str(QC_FP/'02_trimmomatic'/'{sample}_2.fastq.gz'),
        unpair_r1 = temp(str(QC_FP/'02_trimmomatic'/'unpaired'/'{sample}_1_unpaired.fastq.gz')),
        unpair_r2 = temp(str(QC_FP/'02_trimmomatic'/'unpaired'/'{sample}_2_unpaired.fastq.gz'))
    log: str(QC_FP/'log'/'trimmomatic'/'{sample}.out'),
    params:
        sw_start = Cfg['qc']['slidingwindow'][0],
        sw_end = Cfg['qc']['slidingwindow'][1]
    conda:
        "../../envs/qc.yml"
    threads:
        Cfg['qc']['threads']
    shell:
        """
        trimmomatic \
        PE -threads {threads} -phred33 \
        {input.r1} {input.r2} \
        {output.pair_r1} {output.unpair_r1} \
        {output.pair_r2} {output.unpair_r2} \
        ILLUMINACLIP:{Cfg[qc][adapter_fp]}:2:30:10:8:true \
        LEADING:{Cfg[qc][leading]} \
        TRAILING:{Cfg[qc][trailing]} \
        SLIDINGWINDOW:{params.sw_start}:{params.sw_end} \
        MINLEN:{Cfg[qc][minlen]} \
        > >(tee -a {log}) 2> >(tee -a {log} >&2)
        """


rule fastqc:
    input:
        reads = expand(
            str(QC_FP/"02_trimmomatic"/"{{sample}}_{rp}.fastq.gz"),
            rp=Pairs)
    output:
        expand(
            str(QC_FP/'reports'/'{{sample}}_{rp}_fastqc/fastqc_data.txt'),
            rp=Pairs)
    conda:
        "../../envs/qc.yml"
    params:
        outdir = str(QC_FP/'reports')
    shell:
        "fastqc -o {params.outdir} {input.reads} -extract"
